# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-backend:latest
#     container_name: midara-backend
#     restart: unless-stopped
#     env_file:
#       - ./backend/.env
#     ports:
#       - "5000:5000"
#     depends_on:
#       - frontend
#     networks:
#       - midara-network

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-frontend:latest
#     container_name: midara-frontend
#     restart: unless-stopped
#     env_file:
#       - ./frontend/.env
#     ports:
#       - "3000:3000"
#     networks:
#       - midara-network

# networks:
#   midara-network:
#     driver: bridge

version: "3.9"

services:
  backend:
    image: 092171113246.dkr.ecr.us-east-1.amazonaws.com/midara/backend:latest
    container_name: midara-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    networks:
      - midara-network

  frontend:
    image: 092171113246.dkr.ecr.us-east-1.amazonaws.com/midara/frontend:latest
    container_name: midara-frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env
    networks:
      - midara-network

  nginx:
    image: 092171113246.dkr.ecr.us-east-1.amazonaws.com/midara/nginx:latest
    container_name: midara-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs # Certificados SSL gerenciados pelo Certbot
      - ./nginx/conf.d:/etc/nginx/conf.d # Configurações personalizadas
    depends_on:
      - backend
      - frontend
    networks:
      - midara-network

  certbot:
    image: certbot/certbot:v2.9.2
    container_name: certbot
    volumes:
      - ./certs:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --quiet; done"
    restart: unless-stopped
    networks:
      - midara-network

networks:
  midara-network:
    driver: bridge
