# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-backend:latest
#     container_name: midara-backend
#     restart: unless-stopped
#     env_file:
#       - ./backend/.env
#     ports:
#       - "5000:5000"
#     depends_on:
#       - frontend
#     networks:
#       - midara-network

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-frontend:latest
#     container_name: midara-frontend
#     restart: unless-stopped
#     env_file:
#       - ./frontend/.env
#     ports:
#       - "3000:3000"
#     networks:
#       - midara-network

# networks:
#   midara-network:
#     driver: bridge

services:
  backend:
    image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-backend:latest
    container_name: midara-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    networks:
      - midara-network

  frontend:
    image: <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/midara-frontend:latest
    container_name: midara-frontend
    restart: unless-stopped
    env_file:
      - ./frontend/.env
    networks:
      - midara-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: midara-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - midara-network

networks:
  midara-network:
    driver: bridge
